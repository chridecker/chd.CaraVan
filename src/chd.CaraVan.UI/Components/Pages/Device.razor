@page "/device/{Id:int}"
@using Microsoft.Extensions.Options
@using chd.CaraVan.Contracts.Dtos
@using chd.CaraVan.Contracts.Settings
@using chd.CaraVan.UI.Components.Pages.Charts
@using chd.CaraVan.UI.Implementations
@inject IOptionsMonitor<DeviceSettings> options
@inject IDataService dataService
<h3>@options.CurrentValue.Devices.FirstOrDefault(x => x.Id == this.Id).Name</h3>

@if (dataTemperature != null && dataTemperature.Any())
{
    <DeviceChart Title="Temperatur" Data="@dataTemperature"></DeviceChart>
}
@if (dataHumidity != null && dataHumidity.Any())
{
    <DeviceChart Title="Luftfeuchtigkeit" Data="@dataHumidity"></DeviceChart>
}

@code {
    [Parameter] public int Id { get; set; }

    private DeviceDto device => options.CurrentValue.Devices.FirstOrDefault(x => x.Id == this.Id);
    private double[] dataTemperature;
    private double[] dataHumidity;

    protected override async Task OnParametersSetAsync()
    {
        dataTemperature = (await this.dataService.GetDeviceDataAsync(this.device.Id, Contracts.Enums.EDataType.Temperature, DateTime.Now.AddHours(-1), DateTime.Now)).Select(s => (double)s.Value).ToArray();
        dataHumidity = (await this.dataService.GetDeviceDataAsync(this.device.Id, Contracts.Enums.EDataType.Humidity, DateTime.Now.AddHours(-1), DateTime.Now)).Select(s => (double)s.Value).ToArray();
        await base.OnParametersSetAsync();
    }

}
